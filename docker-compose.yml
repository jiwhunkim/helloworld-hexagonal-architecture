services:
  redis:
    container_name: "redis"
    image: redis:latest
    command: ["--notify-keyspace-events", "Ex"]
    ports:
    - "6379:6379"
    volumes:
    - ./local/docker-volumes/redis:/data

  mysql:
    container_name: "mysql"
    image: mysql:latest
    restart: always
    command: ['--character-set-server=utf8mb4', '--collation-server=utf8mb4_general_ci' ]
    environment:
      MYSQL_ROOT_PASSWORD: mysql
      MYSQL_USER: user
      MYSQL_PASSWORD: pass
      TZ: 'Asia/Seoul'
    ports:
      - "3306:3306"
    volumes:
      - ./local/docker-volumes/mysql:/var/lib/mysql

  zookeeper:
    container_name: "zookeeper"
    image: bitnami/zookeeper:latest
    ports:
    - "2181:2181"
    environment:
    - ALLOW_ANONYMOUS_LOGIN=yes
    volumes:
    - ./local/docker-volumes/zookeeper:/bitnami/zookeeper

  kafka:
    container_name: "kafka"
    image: bitnami/kafka:latest
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT,CONTROLLER:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://:9094
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092,EXTERNAL://localhost:9094
      - BITNAMI_DEBUG=true
    ports:
      - "9092:9092"
      - "9094:9094"
    volumes:
      - ./local/docker-volumes/kafka:/bitnami/kafka
    depends_on:
      - zookeeper

  kafdrop:
    container_name: "kafdrop"
    image: obsidiandynamics/kafdrop
    ports:
      - "9000:9000"
    environment:
      - KAFKA_BROKERCONNECT=kafka:9092
      - JVM_OPTS=-Xms32M -Xmx64M
    depends_on:
      - kafka

  localstack:
    container_name: localstack
    image: localstack/localstack:latest
    ports:
      - "4566:4566"
    environment:
      - SERVICES=s3,sqs,sns
      - USE_SINGLE_REGION=1
      - DEFAULT_REGION=ap-northeast-2
      - HOSTNAME=localhost
      - HOSTNAME_EXTERNAL=localhost
      - DATA_DIR=/tmp/localstack/data
    volumes:
      - ./local/aws:/docker-entrypoint-initaws.d
